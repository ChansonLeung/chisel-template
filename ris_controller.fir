circuit ris_controller :
  module ris_controller :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip data_channel : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<256>}, flip valid : UInt<1>, out_data : UInt<32>, out_clk : UInt<1>, out_le : UInt<1>}

    node _T = bits(reset, 0, 0) @[ris.scala 34:23]
    node _T_1 = eq(_T, UInt<1>("h0")) @[ris.scala 34:16]
    node _T_2 = asAsyncReset(_T_1) @[ris.scala 34:31]
    reg out_data : UInt, clock with :
      reset => (_T_2, UInt<1>("h0")) @[ris.scala 35:31]
    reg out_clk : UInt, clock with :
      reset => (_T_2, UInt<1>("h1")) @[ris.scala 36:30]
    reg out_le : UInt, clock with :
      reset => (_T_2, UInt<1>("h0")) @[ris.scala 37:29]
    reg ready : UInt<1>, clock with :
      reset => (_T_2, UInt<1>("h1")) @[ris.scala 38:28]
    io.out_data <= out_data @[ris.scala 39:21]
    io.out_clk <= out_clk @[ris.scala 40:20]
    io.out_le <= out_le @[ris.scala 41:19]
    io.data_channel.ready <= ready @[ris.scala 42:31]
    out_le <= io.data_channel.valid @[ris.scala 44:16]
    reg data_reg : UInt<256>, clock with :
      reset => (_T_2, UInt<256>("h0")) @[ris.scala 47:31]
    reg value : UInt<3>, clock with :
      reset => (_T_2, UInt<3>("h0")) @[Counter.scala 62:40]
    reg state : UInt<1>, clock with :
      reset => (_T_2, UInt<1>("h0")) @[ris.scala 52:28]
    node _T_3 = eq(UInt<1>("h0"), state) @[ris.scala 53:22]
    when _T_3 : @[ris.scala 53:22]
      out_data <= UInt<1>("h1") @[ris.scala 57:29]
      out_clk <= UInt<1>("h1") @[ris.scala 58:29]
      node _T_4 = and(ready, io.data_channel.valid) @[ris.scala 62:28]
      when _T_4 : @[ris.scala 62:52]
        state <= UInt<1>("h1") @[ris.scala 63:27]
        data_reg <= io.data_channel.bits @[ris.scala 65:30]
        value <= UInt<1>("h0") @[Counter.scala 99:11]
        ready <= UInt<1>("h0") @[ris.scala 69:27]
    else :
      node _T_5 = eq(UInt<1>("h1"), state) @[ris.scala 53:22]
      when _T_5 : @[ris.scala 53:22]
        node _out_clk_T = asUInt(clock) @[ris.scala 76:38]
        node _out_clk_T_1 = bits(_out_clk_T, 0, 0) @[ris.scala 76:38]
        out_clk <= _out_clk_T_1 @[ris.scala 76:29]
        node _T_6 = asUInt(clock) @[ris.scala 77:32]
        node _T_7 = bits(_T_6, 0, 0) @[ris.scala 77:32]
        when _T_7 : @[ris.scala 77:39]
          node _out_data_T = bits(data_reg, 0, 0) @[ris.scala 80:49]
          out_data <= _out_data_T @[ris.scala 80:38]
          node _out_data_T_1 = bits(data_reg, 8, 8) @[ris.scala 80:49]
          out_data <= _out_data_T_1 @[ris.scala 80:38]
          node _out_data_T_2 = bits(data_reg, 16, 16) @[ris.scala 80:49]
          out_data <= _out_data_T_2 @[ris.scala 80:38]
          node _out_data_T_3 = bits(data_reg, 24, 24) @[ris.scala 80:49]
          out_data <= _out_data_T_3 @[ris.scala 80:38]
          node _out_data_T_4 = bits(data_reg, 32, 32) @[ris.scala 80:49]
          out_data <= _out_data_T_4 @[ris.scala 80:38]
          node _out_data_T_5 = bits(data_reg, 40, 40) @[ris.scala 80:49]
          out_data <= _out_data_T_5 @[ris.scala 80:38]
          node _out_data_T_6 = bits(data_reg, 48, 48) @[ris.scala 80:49]
          out_data <= _out_data_T_6 @[ris.scala 80:38]
          node _out_data_T_7 = bits(data_reg, 56, 56) @[ris.scala 80:49]
          out_data <= _out_data_T_7 @[ris.scala 80:38]
          node _out_data_T_8 = bits(data_reg, 64, 64) @[ris.scala 80:49]
          out_data <= _out_data_T_8 @[ris.scala 80:38]
          node _out_data_T_9 = bits(data_reg, 72, 72) @[ris.scala 80:49]
          out_data <= _out_data_T_9 @[ris.scala 80:38]
          node _out_data_T_10 = bits(data_reg, 80, 80) @[ris.scala 80:49]
          out_data <= _out_data_T_10 @[ris.scala 80:38]
          node _out_data_T_11 = bits(data_reg, 88, 88) @[ris.scala 80:49]
          out_data <= _out_data_T_11 @[ris.scala 80:38]
          node _out_data_T_12 = bits(data_reg, 96, 96) @[ris.scala 80:49]
          out_data <= _out_data_T_12 @[ris.scala 80:38]
          node _out_data_T_13 = bits(data_reg, 104, 104) @[ris.scala 80:49]
          out_data <= _out_data_T_13 @[ris.scala 80:38]
          node _out_data_T_14 = bits(data_reg, 112, 112) @[ris.scala 80:49]
          out_data <= _out_data_T_14 @[ris.scala 80:38]
          node _out_data_T_15 = bits(data_reg, 120, 120) @[ris.scala 80:49]
          out_data <= _out_data_T_15 @[ris.scala 80:38]
          node _out_data_T_16 = bits(data_reg, 128, 128) @[ris.scala 80:49]
          out_data <= _out_data_T_16 @[ris.scala 80:38]
          node _out_data_T_17 = bits(data_reg, 136, 136) @[ris.scala 80:49]
          out_data <= _out_data_T_17 @[ris.scala 80:38]
          node _out_data_T_18 = bits(data_reg, 144, 144) @[ris.scala 80:49]
          out_data <= _out_data_T_18 @[ris.scala 80:38]
          node _out_data_T_19 = bits(data_reg, 152, 152) @[ris.scala 80:49]
          out_data <= _out_data_T_19 @[ris.scala 80:38]
          node _out_data_T_20 = bits(data_reg, 160, 160) @[ris.scala 80:49]
          out_data <= _out_data_T_20 @[ris.scala 80:38]
          node _out_data_T_21 = bits(data_reg, 168, 168) @[ris.scala 80:49]
          out_data <= _out_data_T_21 @[ris.scala 80:38]
          node _out_data_T_22 = bits(data_reg, 176, 176) @[ris.scala 80:49]
          out_data <= _out_data_T_22 @[ris.scala 80:38]
          node _out_data_T_23 = bits(data_reg, 184, 184) @[ris.scala 80:49]
          out_data <= _out_data_T_23 @[ris.scala 80:38]
          node _out_data_T_24 = bits(data_reg, 192, 192) @[ris.scala 80:49]
          out_data <= _out_data_T_24 @[ris.scala 80:38]
          node _out_data_T_25 = bits(data_reg, 200, 200) @[ris.scala 80:49]
          out_data <= _out_data_T_25 @[ris.scala 80:38]
          node _out_data_T_26 = bits(data_reg, 208, 208) @[ris.scala 80:49]
          out_data <= _out_data_T_26 @[ris.scala 80:38]
          node _out_data_T_27 = bits(data_reg, 216, 216) @[ris.scala 80:49]
          out_data <= _out_data_T_27 @[ris.scala 80:38]
          node _out_data_T_28 = bits(data_reg, 224, 224) @[ris.scala 80:49]
          out_data <= _out_data_T_28 @[ris.scala 80:38]
          node _out_data_T_29 = bits(data_reg, 232, 232) @[ris.scala 80:49]
          out_data <= _out_data_T_29 @[ris.scala 80:38]
          node _out_data_T_30 = bits(data_reg, 240, 240) @[ris.scala 80:49]
          out_data <= _out_data_T_30 @[ris.scala 80:38]
          node _out_data_T_31 = bits(data_reg, 248, 248) @[ris.scala 80:49]
          out_data <= _out_data_T_31 @[ris.scala 80:38]
          node _data_reg_T = dshr(data_reg, UInt<4>("h8")) @[ris.scala 83:46]
          data_reg <= _data_reg_T @[ris.scala 83:34]
          node wrap = eq(value, UInt<3>("h7")) @[Counter.scala 74:24]
          node _value_T = add(value, UInt<1>("h1")) @[Counter.scala 78:24]
          node _value_T_1 = tail(_value_T, 1) @[Counter.scala 78:24]
          value <= _value_T_1 @[Counter.scala 78:15]
        node _T_8 = eq(value, UInt<3>("h7")) @[ris.scala 89:38]
        when _T_8 : @[ris.scala 89:61]
          state <= UInt<1>("h0") @[ris.scala 90:27]
          ready <= UInt<1>("h1") @[ris.scala 92:27]

